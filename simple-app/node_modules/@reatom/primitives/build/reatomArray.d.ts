import { AtomMut } from '@reatom/core';
import { WithReducers } from './withReducers';
export type ArrayAtom<T> = WithReducers<AtomMut<Array<T>>, {
    toReversed(state: Array<T>): Array<T>;
    toSorted(state: Array<T>, compareFn?: (a: T, b: T) => number): Array<T>;
    toSpliced(state: Array<T>, start: number, deleteCount: number, ...items: T[]): Array<T>;
    with(state: Array<T>, index: number, value: T): Array<T>;
}>;
export declare const reatomArray: <T>(initState?: T[], name?: string) => ArrayAtom<T>;
//# sourceMappingURL=reatomArray.d.ts.map