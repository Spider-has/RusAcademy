import { Atom, Ctx, Rec } from '@reatom/core';
export type ParseAtoms<T> = T extends Atom<infer T> ? ParseAtoms<T> : T extends Map<infer K, infer T> ? Map<K, ParseAtoms<T>> : T extends Set<infer T> ? Set<ParseAtoms<T>> : T extends Rec ? {
    [K in keyof T]: ParseAtoms<T[K]>;
} : T;
export declare const parseAtoms: <Value>(ctx: Ctx, value: Value) => ParseAtoms<Value>;
//# sourceMappingURL=parseAtoms.d.ts.map