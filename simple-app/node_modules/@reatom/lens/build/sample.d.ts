import { Action, Atom, AtomState, Fn } from '@reatom/core';
import { type LensAtom, type LensAction } from './';
/** Delay updates until other atom update / action call */
export declare const sample: {
    <T extends Atom>(signal: Atom, name?: string): Fn<[
        T
    ], T extends Action<infer Params, infer Payload> ? LensAction<[], Payload> : LensAtom<AtomState<T>>>;
};
//# sourceMappingURL=sample.d.ts.map