{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["import React from 'react'\nimport { useSyncExternalStore } from 'use-sync-external-store/shim'\nimport {\n  action,\n  Action,\n  atom,\n  Atom,\n  AtomMut,\n  AtomState,\n  createCtx,\n  Ctx,\n  CtxSpy,\n  Fn,\n  isAction,\n  isAtom,\n  throwReatomError,\n} from '@reatom/core'\nimport { bind, Binded } from '@reatom/lens'\n\nlet getName = (type: string): string => {\n  let name =\n    // @ts-expect-error do we have another way?\n    React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?.ReactCurrentOwner\n      ?.current?.type?.name\n  return (name && name.concat('.', type)) || `_${type}`\n}\n\nlet batch = (cb: Fn) => cb()\n\nexport const setupBatch = (newBatch: typeof batch) => {\n  batch = newBatch\n}\n\nexport const withBatching = (ctx: Ctx): Ctx => {\n  let queue: Array<Fn> = []\n  return {\n    ...ctx,\n    // @ts-ignore\n    subscribe: (anAtom, cb) =>\n      ctx.subscribe(\n        anAtom,\n        cb &&\n          ((value) =>\n            Promise.resolve(queue.push(() => cb(value))).then(\n              (length) =>\n                length === queue.length &&\n                batch(() => queue.splice(0).forEach((cb) => cb())),\n            )),\n      ),\n  }\n}\n\nexport const reatomContext = React.createContext<null | Ctx>(null)\n\nexport const useCtx = (): Ctx => {\n  let ctx = React.useContext(reatomContext)\n\n  throwReatomError(\n    !ctx,\n    'ctx is not set, you probably forgot to specify the ctx provider',\n  )\n\n  return ctx!\n}\n\nlet bindBind = (ctx: Ctx, fn: Fn) => bind(ctx, fn)\nexport const useCtxBind = (): (<T extends Fn>(fn: T) => Binded<T>) =>\n  bind(useCtx(), bindBind)\n\n// use it instead of `setState` to handle HMR\nconst useRefSetup = <T extends Fn<[], { deps: Array<any> }>>(\n  deps: Array<any>,\n  setup: T,\n): React.MutableRefObject<ReturnType<T>> => {\n  let ref = React.useRef<ReturnType<typeof setup>>()\n  if (\n    ref.current === undefined ||\n    ref.current.deps.length !== deps.length ||\n    ref.current!.deps.some((v, i) => !Object.is(v, deps[i]!))\n  ) {\n    // @ts-expect-error\n    ref.current = setup()\n  }\n\n  // @ts-expect-error\n  return ref\n}\n\n// @ts-ignore\nexport const useAtom: {\n  <T extends Atom>(\n    atom: T,\n    deps?: Array<any>,\n    options?: boolean | { name?: string; subscribe?: boolean },\n  ): [\n    AtomState<T>,\n    T extends Fn<[Ctx, ...infer Args], infer Res> ? Fn<Args, Res> : undefined,\n    T,\n    Ctx,\n  ]\n  <T>(\n    init: T | Fn<[CtxSpy], T>,\n    deps?: Array<any>,\n    options?: boolean | { name?: string; subscribe?: boolean },\n  ): [T, Fn<[T | Fn<[T, Ctx], T>], T>, AtomMut<T>, Ctx]\n} = (\n  anAtom: any,\n  userDeps: Array<any> = [],\n  options: boolean | { name?: string; subscribe?: boolean } = {},\n) => {\n  let { name, subscribe = true }: { name?: string; subscribe?: boolean } =\n    typeof options === 'boolean' ? { subscribe: options } : options\n  let ctx = useCtx()\n  let deps: any[] = [ctx]\n  if (isAtom(anAtom)) deps.push(anAtom)\n\n  let { theAtom, depsAtom, update, sub, get } = useRefSetup(deps, () => {\n    let atomName = getName(name ?? `useAtom#${typeof anAtom}`)\n    let depsAtom = atom<any[]>([], `${atomName}._depsAtom`)\n    let theAtom = anAtom\n    if (!isAtom(theAtom)) {\n      theAtom = atom(\n        typeof anAtom === 'function'\n          ? (ctx: CtxSpy, state?: any) => {\n              ctx.spy(depsAtom)\n              return anAtom(ctx, state)\n            }\n          : anAtom,\n        atomName,\n      )\n    }\n    let update =\n      typeof theAtom === 'function'\n        ? // @ts-expect-error\n          (...a) => batch(() => theAtom(ctx, ...a))\n        : undefined\n    let sub = (cb: Fn) => ctx.subscribe(theAtom, cb)\n    let get = () => ctx.get(theAtom)\n\n    return { theAtom, depsAtom, update, deps, sub, get, subscribe }\n  }).current\n\n  return ctx.get(() => {\n    if (!isAtom(anAtom)) {\n      const prevDeps = ctx.get(depsAtom)\n      if (\n        userDeps.length !== prevDeps.length ||\n        userDeps.some((dep, i) => !Object.is(dep, prevDeps[i]))\n      ) {\n        if (typeof anAtom === 'function') depsAtom(ctx, userDeps)\n        else update!(ctx, anAtom)\n      }\n    }\n\n    return [\n      subscribe ? useSyncExternalStore(sub, get, get) : get(),\n      update,\n      theAtom,\n      ctx,\n    ]\n  })\n}\n\nexport const useAtomCreator = <T extends Atom>(\n  creator: Fn<[], T>,\n  deps: Array<any> = [],\n  options?: { subscribe?: boolean },\n) => {\n  const ref = useRefSetup(deps, () => ({ deps, theAtom: creator() }))\n  return useAtom(ref.current.theAtom, [], options)\n}\n\nexport const useUpdate = <T extends [any] | Array<any>>(\n  cb: Fn<\n    [\n      Ctx,\n      ...{\n        [K in keyof T]: T[K] extends Atom ? AtomState<T[K]> : T[K]\n      },\n    ]\n  >,\n  deps: T,\n): null => {\n  const ctx = useCtx()\n\n  React.useEffect(() => {\n    const call = (ctx: Ctx) => {\n      // @ts-expect-error\n      cb(ctx, ...deps.map((thing) => (isAtom(thing) ? ctx.get(thing) : thing)))\n    }\n\n    call(ctx)\n\n    deps.forEach(\n      (thing, i) =>\n        isAtom(thing) && (thing.__reatom.updateHooks ??= new Set()).add(call),\n    )\n\n    return () =>\n      deps.forEach(\n        (thing, i) => isAtom(thing) && thing.__reatom.updateHooks!.delete(call),\n      )\n  }, deps.concat(ctx))\n\n  return null\n}\n\nexport const useAction = <T extends Fn<[Ctx, ...Array<any>]>>(\n  fn: T,\n  deps: Array<any> = [],\n  name?: string,\n): T extends Fn<[Ctx, ...infer Args], infer Res> ? Fn<Args, Res> : never => {\n  deps ??= []\n  let ctx = useCtx()\n  deps.push(ctx)\n  if (isAction(fn)) deps.push(fn)\n\n  let ref = useRefSetup(deps, () => {\n    let theAction: Action = isAction(fn)\n      ? fn\n      : action((...a) => ref.current!.fn(...a), name ?? getName(`useAction`))\n    let cb = (...a: Array<any>) => batch(() => theAction(ctx, ...a))\n    return { fn, deps, cb }\n  })\n  React.useLayoutEffect(() => {\n    ref.current!.fn = fn\n  })\n\n  // @ts-ignore\n  return ref.current.cb\n}\n\nexport const useCreateCtx = (extension?: Fn<[Ctx]>) => {\n  const ctxRef = React.useRef(null as null | Ctx)\n  if (!ctxRef.current) {\n    ctxRef.current = createCtx()\n    extension?.(ctxRef.current)\n  }\n  return ctxRef.current\n}\n\n// export let unstable_reatomComponent =\n//   <T = {}>(\n//     render: (\n//       ctx: CtxSpy,\n//       props: React.PropsWithChildren<T>,\n//     ) => React.ReactElement,\n//   ): React.FC<T> =>\n//   (props) => {\n//     let ctx = useCtx()\n//     return ctx.get(() => {\n//       let trackCtx: Ctx = {\n//         get: ctx.get,\n//         spy(anAtom) {},\n//         schedule: ctx.schedule,\n//         subscribe: ctx.subscribe,\n//         cause: ctx.cause,\n//       }\n//       let element = render(trackCtx, props)\n//     })\n\n//     let [propsAtom] = useState(() => atom(props))\n//     propsAtom(useCtx(), props)\n//     let [[element]] = useAtom((ctx, state?: any) => {\n//       let props = ctx.spy(propsAtom)\n\n//       return [\n//         props === ctx.cause!.parents[0]?.state ? state : render(ctx, props),\n//       ]\n//     })\n\n//     return element\n//   }\n"],"names":["getName","type","name","React","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","current","concat","batch","cb","setupBatch","newBatch","withBatching","ctx","queue","subscribe","anAtom","value","Promise","resolve","push","then","length","splice","forEach","reatomContext","createContext","useCtx","useContext","throwReatomError","bindBind","fn","bind","useCtxBind","useRefSetup","deps","setup","ref","useRef","undefined","some","v","i","Object","is","useAtom","userDeps","options","isAtom","theAtom","depsAtom","update","sub","get","atomName","atom","state","spy","slice","call","arguments","prevDeps","dep","useSyncExternalStore","useAtomCreator","creator","useUpdate","useEffect","map","thing","__reatom","updateHooks","Set","add","delete","useAction","isAction","theAction","action","useLayoutEffect","useCreateCtx","extension","ctxRef","createCtx"],"mappings":"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"}